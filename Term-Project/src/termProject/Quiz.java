/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package termProject;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;

/**
 *
 * @author Mark Swarner, Georgia Snelling
 */
public class Quiz extends javax.swing.JFrame {

    /**
     * Creates new form quizJFrame
     */
    
    
    //Makes an array for the questions
    ArrayList<Question> multipleQuestionsArray = new ArrayList<Question>();
    Question multipleQuestion = null;

    //Each factor of the object in the array
    int number;
    int questionNumber;
    String question;
    String option1;
    String option2;
    String option3;
    String option4;
    String correctAnswer;
    String wrongMessage;
    String correctMessage;

    int size;

    TermProjectJFrame mainFrame;
    Question questions;

    public Quiz(ArrayList array, Question objQuestion) {
        initComponents();

        this.setLocationRelativeTo(null);
        mainMenuJButton.setVisible(false);

        //Gets the array and the object from the paramters
        multipleQuestionsArray = array;
        multipleQuestion = objQuestion;

        //Gets the size of the array
        size = multipleQuestionsArray.size();

        //Gets all the factors of the question
        number = multipleQuestion.getQuestionNumber();
        String questionNumber = multipleQuestion.getQuestionNumber() + "";
        question = multipleQuestion.getQuestion();
        option1 = multipleQuestion.getOption1();
        option2 = multipleQuestion.getOption2();
        option3 = multipleQuestion.getOption3();
        option4 = multipleQuestion.getOption4();
        correctAnswer = multipleQuestion.getCorrectAnswer();

        //Sets the factors of the question (Text)
        questionJLabel.setText(questionNumber + ". " + question);
        radio1.setText(option1);
        radio2.setText(option2);
        radio3.setText(option3);
        radio4.setText(option4);
        
        //Sets the images for the question
        image1Label.setIcon(new ImageIcon(this.getClass().getResource(multipleQuestion.getImage1Name())));
        image2Label.setIcon(new ImageIcon(this.getClass().getResource(multipleQuestion.getImage2Name())));
        image3Label.setIcon(new ImageIcon(this.getClass().getResource(multipleQuestion.getImage3Name())));
        image4Label.setIcon(new ImageIcon(this.getClass().getResource(multipleQuestion.getImage4Name())));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        optionGroup = new javax.swing.ButtonGroup();
        questionJLabel = new javax.swing.JLabel();
        radio1 = new javax.swing.JRadioButton();
        radio2 = new javax.swing.JRadioButton();
        radio3 = new javax.swing.JRadioButton();
        radio4 = new javax.swing.JRadioButton();
        submitJButton = new javax.swing.JButton();
        mainMenuJButton = new javax.swing.JButton();
        glossaryJButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        image1Label = new javax.swing.JLabel();
        image2Label = new javax.swing.JLabel();
        image4Label = new javax.swing.JLabel();
        image3Label = new javax.swing.JLabel();
        directionsLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1073, 679));

        questionJLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        questionJLabel.setText("Which of the following is a Consumer?");

        optionGroup.add(radio1);
        radio1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        radio1.setText("Ficus");
        radio1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radio1MouseClicked(evt);
            }
        });
        radio1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio1ActionPerformed(evt);
            }
        });

        optionGroup.add(radio2);
        radio2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        radio2.setText("Algae");

        optionGroup.add(radio3);
        radio3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        radio3.setText("Plankton");

        optionGroup.add(radio4);
        radio4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        radio4.setText("Bear");

        submitJButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });

        mainMenuJButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        mainMenuJButton.setText("<< Main Menu");
        mainMenuJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainMenuJButtonActionPerformed(evt);
            }
        });

        glossaryJButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        glossaryJButton.setText("Glossary");
        glossaryJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                glossaryJButtonActionPerformed(evt);
            }
        });

        jPanel1.setLayout(null);

        image1Label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        image1Label.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel1.add(image1Label);
        image1Label.setBounds(0, 80, 540, 400);

        image2Label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        image2Label.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel1.add(image2Label);
        image2Label.setBounds(270, 80, 271, 197);

        image4Label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        image4Label.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel1.add(image4Label);
        image4Label.setBounds(270, 280, 271, 197);

        image3Label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        image3Label.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel1.add(image3Label);
        image3Label.setBounds(0, 280, 271, 197);

        directionsLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        directionsLabel.setText("Click on the correct answer to the question!  If you are stuck click on the Glossary for some help!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(directionsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 713, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mainMenuJButton)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(glossaryJButton)
                                        .addGap(51, 51, 51)
                                        .addComponent(submitJButton)))
                                .addGap(195, 195, 195)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(20, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radio4)
                            .addComponent(radio2)
                            .addComponent(radio1)
                            .addComponent(radio3)
                            .addComponent(questionJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(questionJLabel)
                        .addGap(52, 52, 52)
                        .addComponent(radio1)
                        .addGap(18, 18, 18)
                        .addComponent(radio2)
                        .addGap(18, 18, 18)
                        .addComponent(radio3)
                        .addGap(18, 18, 18)
                        .addComponent(radio4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(glossaryJButton)
                            .addComponent(submitJButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mainMenuJButton)
                        .addGap(120, 120, 120))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(directionsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed

        //Checks to see if the chosen option is correct
        if (radio1.isSelected()) {
            if (option1.equals(correctAnswer)) { //Checks to see if the first option is the correct option
                if (multipleQuestion.getQuestionNumber() == size) { //Checks to see if this is the last question of the array
                    mainMenuJButton.setVisible(true); //Sets the main menu button as visible
                    submitJButton.setEnabled(false); //Sets all other buttons as disabled
                    radio1.setEnabled(false);
                    radio2.setEnabled(false);
                    radio3.setEnabled(false);
                    radio4.setEnabled(false);
                    JOptionPane.showMessageDialog(null, "Congrats!  You got through all the questions!  Go back to the Main Map to choose another game!");
                } else { //If it isn't the last question, it just goes to the next question
                    JOptionPane.showMessageDialog(null, multipleQuestion.getCorrectMessage());
                    nextButton();
                }
            } else { //Shows a message for an inncorect option chosen
                radio1.setEnabled(false);
                JOptionPane.showMessageDialog(null, multipleQuestion.getWrongMessage());
            }
        } else if (radio2.isSelected()) {
            if (option2.equals(correctAnswer)) { //Checks to see if the first option is the correct option
                if (multipleQuestion.getQuestionNumber() == size) { //Checks to see if this is the last question of the array
                    mainMenuJButton.setVisible(true); //Sets the main menu button as visible
                    submitJButton.setEnabled(false); //Sets all other buttons as disabled
                    radio1.setEnabled(false);
                    radio2.setEnabled(false);
                    radio3.setEnabled(false);
                    radio4.setEnabled(false);
                    JOptionPane.showMessageDialog(null, "Congrats!  You got through all the questions!  Go back to the Main Map to choose another game!");
                } else { //If it isn't the last question, it just goes to the next question
                    JOptionPane.showMessageDialog(null, multipleQuestion.getCorrectMessage());
                    nextButton();
                } 
            } else { //Shows a message for an inncorect option chosen
                radio2.setEnabled(false);
                JOptionPane.showMessageDialog(null, multipleQuestion.getWrongMessage());
            }
        } else if (radio3.isSelected()) {
            if (option3.equals(correctAnswer)) { //Checks to see if the first option is the correct option
                if (multipleQuestion.getQuestionNumber() == size) { //Checks to see if this is the last question of the array
                    mainMenuJButton.setVisible(true); //Sets the main menu button as visible
                    submitJButton.setEnabled(false); //Sets all other buttons as disabled
                    radio1.setEnabled(false);
                    radio2.setEnabled(false);
                    radio3.setEnabled(false);
                    radio4.setEnabled(false);
                    JOptionPane.showMessageDialog(null, "Congrats!  You got through all the questions!  Go back to the Main Map to choose another game!");
                } else { //If it isn't the last question, it just goes to the next question
                    JOptionPane.showMessageDialog(null, multipleQuestion.getCorrectMessage());
                    nextButton();
                }
            } else { //Shows a message for an inncorect option chosen
                radio3.setEnabled(false);
                JOptionPane.showMessageDialog(null, multipleQuestion.getWrongMessage());
            }
        } else if (radio4.isSelected()) {
            if (option4.equals(correctAnswer)) { //Checks to see if the first option is the correct option
                if (multipleQuestion.getQuestionNumber() == size) { //Checks to see if this is the last question of the array
                    mainMenuJButton.setVisible(true); //Sets the main menu button as visible
                    submitJButton.setEnabled(false); //Sets all other buttons as disabled
                    radio1.setEnabled(false);
                    radio2.setEnabled(false);
                    radio3.setEnabled(false);
                    radio4.setEnabled(false);
                    JOptionPane.showMessageDialog(null, "Congrats!  You got through all the questions!  Go back to the Main Map to choose another game!");
                } else { //If it isn't the last question, it just goes to the next question
                    JOptionPane.showMessageDialog(null, multipleQuestion.getCorrectMessage());
                    nextButton();
                }
            } else { //Shows a message for an inncorect option chosen
                radio4.setEnabled(false);
                JOptionPane.showMessageDialog(null, multipleQuestion.getWrongMessage());
            }
        }


    }//GEN-LAST:event_submitJButtonActionPerformed

    private void mainMenuJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainMenuJButtonActionPerformed

        //Set is as invisble
        this.setVisible(false);
        
    }//GEN-LAST:event_mainMenuJButtonActionPerformed

    private void glossaryJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_glossaryJButtonActionPerformed
        //Jake and Mark
        
        GlossaryJFrame glossaryJFrame = new GlossaryJFrame();
        
        String filename = "/data/Glossary.txt";
        String glossary = "";
        String endOfFileTest = "";
    
        
        try {
            InputStreamReader isr = new InputStreamReader(
                    this.getClass().getResourceAsStream(filename));
            BufferedReader br = new BufferedReader(isr);
            while (true) {
                endOfFileTest = br.readLine();
                if (endOfFileTest == null) {
                    break;
                }
                glossary = glossary + endOfFileTest + "\n" + "\n";
            }
        } catch (IOException e) {

        }
        glossaryJFrame.glossaryJTextArea.setText(glossary);
        glossaryJFrame.setVisible(true);
        
    }//GEN-LAST:event_glossaryJButtonActionPerformed

    private void radio1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radio1ActionPerformed

    private void radio1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radio1MouseClicked
        // TODO add your handling code here:   
    }//GEN-LAST:event_radio1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Quiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Quiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Quiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Quiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new Quiz(ArrayList array).setVisible(true);
            }
        });

    }

    public void nextButton() {
        
        //Sets the buttons as enabled (in case one was disabled)
        radio1.setEnabled(true);
        radio2.setEnabled(true);
        radio3.setEnabled(true);
        radio4.setEnabled(true);

        //Sets the buttons as unselected
        optionGroup.clearSelection();

        //Gets the current number question and gets the next question
        int currentQuestion = multipleQuestion.getQuestionNumber();
        multipleQuestion = multipleQuestionsArray.get(currentQuestion);

        //Gets all the factors of the question
        number = multipleQuestion.getQuestionNumber();
        String questionNumber = multipleQuestion.getQuestionNumber() + "";
        question = multipleQuestion.getQuestion();
        option1 = multipleQuestion.getOption1();
        option2 = multipleQuestion.getOption2();
        option3 = multipleQuestion.getOption3();
        option4 = multipleQuestion.getOption4();
        correctAnswer = multipleQuestion.getCorrectAnswer();

        //Sets the factors of the question (Text)
        questionJLabel.setText(questionNumber + ". " + question);
        radio1.setText(option1);
        radio2.setText(option2);
        radio3.setText(option3);
        radio4.setText(option4);
        
        //Sets the images for the question
        image1Label.setIcon(new ImageIcon(this.getClass().getResource(multipleQuestion.getImage1Name())));
        image2Label.setIcon(new ImageIcon(this.getClass().getResource(multipleQuestion.getImage2Name())));
        image3Label.setIcon(new ImageIcon(this.getClass().getResource(multipleQuestion.getImage3Name())));
        image4Label.setIcon(new ImageIcon(this.getClass().getResource(multipleQuestion.getImage4Name())));
        
        
        
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel directionsLabel;
    private javax.swing.JButton glossaryJButton;
    private javax.swing.JLabel image1Label;
    private javax.swing.JLabel image2Label;
    private javax.swing.JLabel image3Label;
    private javax.swing.JLabel image4Label;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton mainMenuJButton;
    private javax.swing.ButtonGroup optionGroup;
    private javax.swing.JLabel questionJLabel;
    private javax.swing.JRadioButton radio1;
    private javax.swing.JRadioButton radio2;
    private javax.swing.JRadioButton radio3;
    private javax.swing.JRadioButton radio4;
    private javax.swing.JButton submitJButton;
    // End of variables declaration//GEN-END:variables
}
