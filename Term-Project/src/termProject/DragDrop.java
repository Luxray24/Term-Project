


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package termProject;

import java.awt.Color;
import java.awt.Component;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.TransferHandler;
import javax.swing.border.LineBorder;
import javax.swing.border.SoftBevelBorder;

/**
 *
 * @author Mark Swarner, Georgia Snelling
 */
public class DragDrop extends javax.swing.JFrame {
    
    
    ArrayList<DragImage> imageDragDrop = new ArrayList<DragImage>();
    DragImage imageObject = null;
    
    int points;
    int tiles1;
    int tiles2;
    int tiles3;
    int tiles4;
    
    /**
     * Creates new form gameJFrame
     */
    public DragDrop(ArrayList array, DragImage imageDrag) {
        initComponents();
        this.setLocationRelativeTo(null);
        mainMenuButton.setVisible(false);
        
        
        endingImage1.setText("");
        endingImage2.setText("");
        endingImage3.setText("");
        endingImage4.setText("");
        
               
        imageDragDrop = array;
        imageObject = imageDrag;

        
        for (int i = 0; i < 4; i ++)
        {
            imageObject = imageDragDrop.get(i);
            int place = imageObject.getInitialPlace();
            if (place == 1)
            {
                startingImage1.setIcon(new ImageIcon( this.getClass().getResource(imageObject.getImageFileName())));
                startingImage1.setText(imageObject.getImageName());
            }
            else if (place == 2)
            {
                startingImage2.setIcon(new ImageIcon( this.getClass().getResource(imageObject.getImageFileName())));
                startingImage2.setText(imageObject.getImageName());
            }
            else if (place == 3)
            {
                startingImage3.setIcon(new ImageIcon( this.getClass().getResource(imageObject.getImageFileName())));
                startingImage3.setText(imageObject.getImageName());
            }
            else if (place == 4)
            {
                startingImage4.setIcon(new ImageIcon( this.getClass().getResource(imageObject.getImageFileName())));
                startingImage4.setText(imageObject.getImageName());
            }
        }
       
        
        MouseListener ml = new MouseListener() 
        { 
            @Override public void mouseClicked(MouseEvent e) {} 
            @Override public void mousePressed(MouseEvent e) { 
                JComponent jc = (JComponent)e.getSource();
                TransferHandler th = jc.getTransferHandler();
                th.exportAsDrag(jc, e, TransferHandler.COPY); 
            } 
            @Override public void mouseReleased(MouseEvent e) {} 
            @Override public void mouseEntered(MouseEvent e) {} 
            @Override public void mouseExited(MouseEvent e) {} 
        };
        
        
        startingImage1.addMouseListener(ml); 
        startingImage2.addMouseListener(ml);
        startingImage3.addMouseListener(ml);
        startingImage4.addMouseListener(ml);
        
        
        startingImage1.setTransferHandler(new TransferHandler("text")); 
        startingImage4.setTransferHandler(new TransferHandler("text"));
        startingImage2.setTransferHandler(new TransferHandler("text"));
        startingImage3.setTransferHandler(new TransferHandler("text"));
                
        endingImage1.setTransferHandler(new TransferHandler("text")); 
        endingImage2.setTransferHandler(new TransferHandler("text"));
        endingImage3.setTransferHandler(new TransferHandler("text"));
        endingImage4.setTransferHandler(new TransferHandler("text"));      
        
        
        setLayout(null); 
        setSize(500,500); 
        setLocationRelativeTo(null); 
        setDefaultCloseOperation(DragDrop.EXIT_ON_CLOSE); 
        setVisible(true); 
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new javax.swing.JPanel();
        startingImage1 = new javax.swing.JLabel();
        panel2 = new javax.swing.JPanel();
        startingImage2 = new javax.swing.JLabel();
        panel3 = new javax.swing.JPanel();
        startingImage3 = new javax.swing.JLabel();
        panel4 = new javax.swing.JPanel();
        startingImage4 = new javax.swing.JLabel();
        panel5 = new javax.swing.JPanel();
        endingImage1 = new javax.swing.JLabel();
        panel6 = new javax.swing.JPanel();
        endingImage2 = new javax.swing.JLabel();
        panel7 = new javax.swing.JPanel();
        endingImage3 = new javax.swing.JLabel();
        panel8 = new javax.swing.JPanel();
        endingImage4 = new javax.swing.JLabel();
        submitButton = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        eat1 = new javax.swing.JLabel();
        eat2 = new javax.swing.JLabel();
        eat3 = new javax.swing.JLabel();
        mainMenuButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1161, 662));

        panel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panel1.setMaximumSize(new java.awt.Dimension(102, 102));
        panel1.setMinimumSize(new java.awt.Dimension(102, 102));
        panel1.setLayout(null);

        startingImage1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        startingImage1.setText("jLabel1");
        startingImage1.setMaximumSize(new java.awt.Dimension(102, 102));
        startingImage1.setMinimumSize(new java.awt.Dimension(102, 102));
        startingImage1.setPreferredSize(new java.awt.Dimension(102, 102));
        panel1.add(startingImage1);
        startingImage1.setBounds(0, 0, 180, 160);

        panel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panel2.setMaximumSize(new java.awt.Dimension(102, 102));
        panel2.setMinimumSize(new java.awt.Dimension(102, 102));
        panel2.setPreferredSize(new java.awt.Dimension(102, 102));
        panel2.setLayout(null);

        startingImage2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        startingImage2.setText("jLabel2");
        panel2.add(startingImage2);
        startingImage2.setBounds(0, 0, 180, 160);

        panel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panel3.setLayout(null);

        startingImage3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        startingImage3.setText("jLabel3");
        panel3.add(startingImage3);
        startingImage3.setBounds(0, 0, 180, 160);

        panel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panel4.setLayout(null);

        startingImage4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        startingImage4.setText("jLabel4");
        panel4.add(startingImage4);
        startingImage4.setBounds(0, 0, 180, 160);

        panel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panel5.setMaximumSize(new java.awt.Dimension(102, 102));
        panel5.setMinimumSize(new java.awt.Dimension(102, 102));
        panel5.setLayout(null);

        endingImage1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        endingImage1.setText("jLabel1");
        endingImage1.setMaximumSize(new java.awt.Dimension(102, 102));
        endingImage1.setMinimumSize(new java.awt.Dimension(102, 102));
        endingImage1.setPreferredSize(new java.awt.Dimension(102, 102));
        panel5.add(endingImage1);
        endingImage1.setBounds(0, 0, 180, 160);

        panel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panel6.setMaximumSize(new java.awt.Dimension(102, 102));
        panel6.setMinimumSize(new java.awt.Dimension(102, 102));
        panel6.setLayout(null);

        endingImage2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        endingImage2.setText("jLabel2");
        panel6.add(endingImage2);
        endingImage2.setBounds(0, 0, 180, 160);

        panel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panel7.setLayout(null);

        endingImage3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        endingImage3.setText("jLabel3");
        panel7.add(endingImage3);
        endingImage3.setBounds(0, 0, 180, 160);

        panel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panel8.setLayout(null);

        endingImage4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        endingImage4.setText("jLabel4");
        endingImage4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                endingImage4MouseReleased(evt);
            }
        });
        panel8.add(endingImage4);
        endingImage4.setBounds(0, 0, 180, 160);

        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 36)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Who Eats What?!");

        eat1.setText("Gets Eaten By");

        eat2.setText("Gets Eaten By");

        eat3.setText("Gets Eaten By");

        mainMenuButton.setText("<< Main Menu");
        mainMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainMenuButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panel5, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eat1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(panel6, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eat2)
                                .addGap(32, 32, 32)
                                .addComponent(panel7, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eat3)
                                .addGap(16, 16, 16)
                                .addComponent(panel8, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panel2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mainMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(submitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panel3, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))
                        .addGap(89, 89, 89)
                        .addComponent(panel4, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(204, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(eat1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(panel6, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(panel5, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(panel7, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(panel8, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addComponent(eat2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(eat3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panel2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panel3, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panel4, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(submitButton)
                            .addComponent(mainMenuButton))
                        .addGap(88, 88, 88))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        
        imageObject = imageDragDrop.get(0);
        imageObject = imageDragDrop.get(imageObject.getActualAnimal()-1);
        if (endingImage1.getText() == imageObject.getImageName())
        {
           
            endingImage1.setIcon(new ImageIcon( this.getClass().getResource(imageObject.getImageFileName())));
            endingImage1.setBorder(new LineBorder(Color.black, 5));
            if (imageObject.getInitialPlace() == 1)
            {
                startingImage1.addMouseListener(null);
                startingImage1.setTransferHandler(null);
            }
            else if (imageObject.getInitialPlace() == 2)
            {
                startingImage2.addMouseListener(null);
                startingImage2.setTransferHandler(null);
            }
            else if (imageObject.getInitialPlace() == 3)
            {
                startingImage3.addMouseListener(null);
                startingImage3.setTransferHandler(null);
            }
            else if (imageObject.getInitialPlace() == 4)
            {
                startingImage4.addMouseListener(null);
                startingImage4.setTransferHandler(null);
            }                
            endingImage1.addMouseListener(null);
            endingImage1.setTransferHandler(null); 
            tiles1 = 1;
        }
        else
        {
            endingImage1.setText(null);
        }
        
        
        
        imageObject = imageDragDrop.get(1);
        imageObject = imageDragDrop.get(imageObject.getActualAnimal()-1);
        if (endingImage2.getText() == imageObject.getImageName())
        {
           
            endingImage2.setIcon(new ImageIcon( this.getClass().getResource(imageObject.getImageFileName())));
            endingImage2.setBorder(new LineBorder(Color.black, 5));
            if (imageObject.getInitialPlace() == 1)
            {
                startingImage1.addMouseListener(null);
                startingImage1.setTransferHandler(null);
            }
            else if (imageObject.getInitialPlace() == 2)
            {
                startingImage2.addMouseListener(null);
                startingImage2.setTransferHandler(null);
            }
            else if (imageObject.getInitialPlace() == 3)
            {
                startingImage3.addMouseListener(null);
                startingImage3.setTransferHandler(null);
            }
            else if (imageObject.getInitialPlace() == 4)
            {
                startingImage4.addMouseListener(null);
                startingImage4.setTransferHandler(null);
            }
            endingImage2.addMouseListener(null);
            endingImage2.setTransferHandler(null); 
            tiles2 = 1;
        }
        else
        {
            endingImage2.setText(null);
        }
        
        
        
        imageObject = imageDragDrop.get(2);
        imageObject = imageDragDrop.get(imageObject.getActualAnimal()-1);
        if (endingImage3.getText() == imageObject.getImageName())
        {
           
            endingImage3.setIcon(new ImageIcon( this.getClass().getResource(imageObject.getImageFileName())));
            endingImage3.setBorder(new LineBorder(Color.black, 5));
            if (imageObject.getInitialPlace() == 1)
            {
                startingImage1.addMouseListener(null);
                startingImage1.setTransferHandler(null);
            }
            else if (imageObject.getInitialPlace() == 2)
            {
                startingImage2.addMouseListener(null);
                startingImage2.setTransferHandler(null);
            }
            else if (imageObject.getInitialPlace() == 3)
            {
                startingImage3.addMouseListener(null);
                startingImage3.setTransferHandler(null);
            }
            else if (imageObject.getInitialPlace() == 4)
            {
                startingImage4.addMouseListener(null);
                startingImage4.setTransferHandler(null);
            } 
            endingImage3.addMouseListener(null);
            endingImage3.setTransferHandler(null); 
            tiles3 = 1;
        }
        else
        {
            endingImage3.setText(null);
        }
        
        
        
        imageObject = imageDragDrop.get(3);
        imageObject = imageDragDrop.get(imageObject.getActualAnimal()-1);
        if (endingImage4.getText() == imageObject.getImageName())
        {
           
            endingImage4.setIcon(new ImageIcon( this.getClass().getResource(imageObject.getImageFileName())));
            endingImage4.setBorder(new LineBorder(Color.black, 5));
            if (imageObject.getInitialPlace() == 1)
            {
                startingImage1.addMouseListener(null);
                startingImage1.setTransferHandler(null);
            }
            else if (imageObject.getInitialPlace() == 2)
            {
                startingImage2.addMouseListener(null);
                startingImage2.setTransferHandler(null);
            }
            else if (imageObject.getInitialPlace() == 3)
            {
                startingImage3.addMouseListener(null);
                startingImage3.setTransferHandler(null);
            }
            else if (imageObject.getInitialPlace() == 4)
            {
                startingImage4.addMouseListener(null);
                startingImage4.setTransferHandler(null);
            }
            endingImage4.addMouseListener(null);
            endingImage4.setTransferHandler(null);
            tiles4 = 1;
        }
        else
        {
            endingImage4.setText(null);
        }
        
        
        if(tiles1 == 1 && tiles2 == 1 && tiles3 == 1 && tiles4 == 1 )
        {
            JOptionPane.showMessageDialog(null, "Congrats!  You got the food web correct!  Go back to the Main Map to choose another game!");
            mainMenuButton.setVisible(true);
            submitButton.setEnabled(false);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Oops.  Looks like there might be an empty space or one of those were not placed in the correct spot.  Please try again.");
        }
        
               
        
    }//GEN-LAST:event_submitButtonActionPerformed

    private void endingImage4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_endingImage4MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_endingImage4MouseReleased

    private void mainMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainMenuButtonActionPerformed
        // TODO add your handling code here:
        
        this.setVisible(false);
        
    }//GEN-LAST:event_mainMenuButtonActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DragDrop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DragDrop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DragDrop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DragDrop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new DragDrop().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel eat1;
    private javax.swing.JLabel eat2;
    private javax.swing.JLabel eat3;
    private javax.swing.JLabel endingImage1;
    private javax.swing.JLabel endingImage2;
    private javax.swing.JLabel endingImage3;
    private javax.swing.JLabel endingImage4;
    private javax.swing.JButton mainMenuButton;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel panel2;
    private javax.swing.JPanel panel3;
    private javax.swing.JPanel panel4;
    private javax.swing.JPanel panel5;
    private javax.swing.JPanel panel6;
    private javax.swing.JPanel panel7;
    private javax.swing.JPanel panel8;
    private javax.swing.JLabel startingImage1;
    private javax.swing.JLabel startingImage2;
    private javax.swing.JLabel startingImage3;
    private javax.swing.JLabel startingImage4;
    private javax.swing.JButton submitButton;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
